user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types *;

    # Serve the application
    server {
        listen 80;
        server_name localhost;  # Or your domain, e.g., alphavisa.vn

        # Set the root directory
        root /usr/share/nginx/html;
        index index.html index.html.gz;

        # Serve the application (including client-side routing)
        location / {
            try_files $uri $uri/ /index.html.gz =404;

            # Set the appropriate headers for gzipped index.html
            gzip off;  # Ensure Nginx does not try to recompress
            add_header Content-Encoding gzip;
            add_header Content-Type text/html;
        }

        # Correctly serve JavaScript, CSS, and other files with .gz if only .gz is present
        location ~* \.js$ {
            add_header Content-Type application/javascript;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        location ~* \.css$ {
            add_header Content-Type text/css;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        location ~* \.html$ {
            add_header Content-Type text/html;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        # Handle static assets (images, fonts, etc.)
        location ~* \.(eot|ttf|woff|woff2|svg|png|jpeg|jpg|gif|webp)$ {
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        # Handle all .gz files directly
        location ~* \.gz$ {
            gzip off;  # Do not recompress already gzipped files
            add_header Content-Encoding gzip;

            # Set MIME types for compressed files
            types {
                application/javascript js.gz;
                text/css css.gz;
                text/html html.gz;
                image/svg+xml svg.gz;
                font/ttf ttf.gz;
                font/woff woff.gz;
                font/woff2 woff2.gz;
                image/png png.gz;
                image/jpeg jpg.gz;
                image/gif gif.gz;
                image/webp webp.gz;
            }

            # Default MIME type fallback
            default_type application/octet-stream;

            # Serve the file if it exists, otherwise return 404
            try_files $uri =404;
        }
    }
}

