user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types *;

    # Serve the application
    server {
        listen 80;
        server_name localhost;  # Or your domain, e.g., alphavisa.vn

        # Set the root directory
        root /usr/share/nginx/html;
        index index.html index.html.gz;

        # Serve the application (including client-side routing)
        location / {
            try_files $uri $uri/ /index.html.gz =404;

            # Set the appropriate headers for gzipped index.html
            gzip off;  # Ensure Nginx does not try to recompress
            add_header Content-Encoding gzip;
            add_header Content-Type text/html;
        }

        # Correctly serve JavaScript, CSS, and other files with .gz if only .gz is present
        location ~* \.js$ {
            add_header Content-Type application/javascript;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        location ~* \.css$ {
            add_header Content-Type text/css;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        location ~* \.html$ {
            add_header Content-Type text/html;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        location ~* \.(svg|svgz)$ {
            add_header Content-Type image/svg+xml;
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        # Handle static assets (images, fonts, etc.)
        location ~* \.(eot|ttf|woff|woff2|png|jpeg|jpg|gif|webp)$ {
            try_files $uri.gz $uri =404;
            add_header Content-Encoding gzip always;
        }

        # Handle all .gz files directly
        location ~* \.gz$ {
            gzip off;  # Do not recompress already gzipped files
            add_header Content-Encoding gzip;

            # Set MIME types for compressed files
            types {
                application/javascript js.gz;
                application/atom+xml atom.gz;
                application/rss+xml rss.gz;
                text/mathml mml.gz;
                text/plain txt.gz;
                text/vnd.sun.j2me.app-descriptor jad.gz;
                text/vnd.wap.wml wml.gz;
                text/x-component htc.gz;
                image/png png.gz;
                image/tiff tif.gz tiff.gz;
                image/vnd.wap.wbmp wbmp.gz;
                image/x-icon ico.gz;
                image/x-jng jng.gz;
                image/x-ms-bmp bmp.gz;
                image/svg+xml svg.gz;
                image/webp webp.gz;
                application/java-archive jar.gz war.gz ear.gz;
                application/mac-binhex40 hqx.gz;
                application/msword doc.gz;
                application/pdf pdf.gz;
                application/postscript ps.gz eps.gz ai.gz;
                application/rtf rtf.gz;
                application/vnd.ms-excel xls.gz;
                application/vnd.ms-powerpoint ppt.gz;
                application/vnd.wap.wmlc wmlc.gz;
                application/vnd.google-earth.kml+xml kml.gz;
                application/vnd.google-earth.kmz kmz.gz;
                application/x-7z-compressed 7z.gz;
                application/x-cocoa cco.gz;
                application/x-java-archive-diff jardiff.gz;
                application/x-java-jnlp-file jnlp.gz;
                application/x-makeself run.gz;
                application/x-perl pl.gz pm.gz;
                application/x-pilot prc.gz pdb.gz;
                application/x-rar-compressed rar.gz;
                application/x-redhat-package-manager rpm.gz;
                application/x-sea sea.gz;
                application/x-shockwave-flash swf.gz;
                application/x-stuffit sit.gz;
                application/x-tcl tcl.gz tk.gz;
                application/x-x509-ca-cert der.gz pem.gz crt.gz;
                application/x-xpinstall xpi.gz;
                application/xhtml+xml xhtml.gz;
                application/zip zip.gz;
                application/octet-stream bin.gz exe.gz dll.gz;
                application/octet-stream deb.gz;
                application/octet-stream dmg.gz;
                application/octet-stream eot.gz;
                application/octet-stream iso.gz img.gz;
                application/octet-stream msi.gz msp.gz msm.gz;
                audio/midi mid.gz midi.gz kar.gz;
                audio/mpeg mp3.gz;
                audio/ogg ogg.gz;
                audio/x-m4a m4a.gz;
                audio/x-realaudio ra.gz;
                video/3gpp 3gpp.gz 3gp.gz;
                video/mp4 mp4.gz;
                video/mpeg mpeg.gz mpg.gz;
                video/quicktime mov.gz;
                video/webm webm.gz;
                video/x-flv flv.gz;
                video/x-m4v m4v.gz;
                video/x-mng mng.gz;
                video/x-ms-asf asx.gz asf.gz;
                video/x-ms-wmv wmv.gz;
                video/x-msvideo avi.gz;
            }

            # Default MIME type fallback
            default_type application/octet-stream;

            # Serve the file if it exists, otherwise return 404
            try_files $uri =404;
        }
    }
}
